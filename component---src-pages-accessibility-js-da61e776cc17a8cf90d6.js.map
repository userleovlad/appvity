{"version":3,"sources":["webpack://appvity-website/./src/components/Layout.js","webpack://appvity-website/./src/pages/accessibility.js"],"names":["children","className","accessibility","data","allMarkdownRemark","nodes","data-sal","data-sal-duration","data-sal-delay","data-sal-easing","xs","md","lg","map","res","key","id","frontmatter","keyNumber","title","dangerouslySetInnerHTML","__html","html"],"mappings":"mKAqBA,IAfe,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACd,OACI,gCACI,gBAAC,IAAD,KACI,iDAEJ,uBAAKC,UAAU,QACX,gBAAC,IAAD,MACA,uBAAKA,UAAU,QAAQD,GACvB,gBAAC,IAAD,U,8FCqChB,UA/CsB,SAAC,GAAc,IAE9BE,EAF6B,EAAXC,KAEGC,kBAAkBC,MAE7C,OACC,gBAAC,IAAD,KACC,uBAAKJ,UAAU,wBACd,uBAAKA,UAAU,+CAA+CK,WAAS,OAAOC,oBAAkB,OAAOC,iBAAe,MAAMC,kBAAgB,QAC5H,gBAAC,IAAD,KACI,6CAGpB,uBAAKR,UAAU,gEAAgEK,WAAS,OAAOC,oBAAkB,OAAOC,iBAAe,MAAMC,kBAAgB,QAC7I,gBAAC,IAAD,KACI,gBAAC,IAAD,KACjB,gBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IAczB,gBAAC,IAAD,CAAKF,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACxB,sBAAIX,UAAU,uCACZC,EAAcW,KAAI,SAACC,GAAD,OAClB,sBAAIC,IAAKD,EAAIE,GAAIA,GAAIF,EAAIG,YAAYC,WAAW,0BAAKJ,EAAIG,YAAYE,OACpE,uBAAKC,wBAAyB,CAAEC,OAAQP,EAAIQ,cAKhD,gBAAC,IAAD,CAAKZ,GAAI,GAAIC,GAAI,GAAIC,GAAI","file":"component---src-pages-accessibility-js-da61e776cc17a8cf90d6.js","sourcesContent":["import React from \"react\";\r\nimport Footer from \"./Footer\";\r\nimport Header from \"./Header\";\r\nimport { Helmet } from 'react-helmet';\r\nimport \"../styles/styles.scss\";\r\n\r\nconst Layout = ({ children }) => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>Appvity Website</title>\r\n            </Helmet>\r\n            <div className=\"body\">\r\n                <Header />\r\n                <div className=\"main\">{children}</div>\r\n                <Footer />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport Layout from \"../components/Layout\";\r\n\r\nconst Accessibility = ({ data }) => {\r\n\r\n\tconst accessibility = data.allMarkdownRemark.nodes;\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<div className=\"main-content-padding\">\r\n\t\t\t\t<div className=\"app-text-template-introduction accessibility\" data-sal=\"fade\" data-sal-duration=\"1000\" data-sal-delay=\"100\" data-sal-easing=\"ease\">\r\n                    <Container>\r\n                        <h2>Accessibility</h2>\r\n                    </Container>\r\n                </div>\r\n\t\t\t\t<div className=\"app-general-seciton app-text-template-body accessibility-body\" data-sal=\"fade\" data-sal-duration=\"1000\" data-sal-delay=\"100\" data-sal-easing=\"ease\">\r\n                    <Container>\r\n                        <Row>\r\n\t\t\t\t\t\t\t<Col xs={12} md={12} lg={2}></Col>\r\n\t\t\t\t\t\t\t{/* <Col xs={12} md={12} lg={3}>\r\n\t\t\t\t\t\t\t\t<ul className=\"app-text-template-body-detail-left\">\r\n\t\t\t\t\t\t\t\t\t{accessibility.map((res) => (\r\n\t\t\t\t\t\t\t\t\t\t<li \r\n\t\t\t\t\t\t\t\t\t\t\tkey={res.id} \r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvar scrollDiv = document.getElementById(res.frontmatter.keyNumber).offsetTop + 370;\r\n\t\t\t\t\t\t\t\t\t\t\t\twindow.scrollTo({ top: scrollDiv, behavior: 'smooth'});\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>{res.frontmatter.title}</li>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</Col> */}\r\n\t\t\t\t\t\t\t<Col xs={12} md={12} lg={8}>\r\n\t\t\t\t\t\t\t\t<ul className=\"app-text-template-body-detail-right\">\r\n\t\t\t\t\t\t\t\t\t{accessibility.map((res) => (\r\n\t\t\t\t\t\t\t\t\t\t<li key={res.id} id={res.frontmatter.keyNumber}><h5>{res.frontmatter.title}</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: res.html }} />\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs={12} md={12} lg={2}></Col>\r\n\t\t\t\t\t\t</Row>\r\n                    </Container>\r\n                </div>\r\n\t\t\t</div>\r\n\t\t</Layout>\r\n\t)\r\n}\r\n\r\nexport default Accessibility;\r\n\r\nexport const query = graphql`\r\n    query AccessibilityPage {\r\n        allMarkdownRemark(\r\n            filter: { frontmatter: { directory: { eq: \"accessibilities\" } } }\r\n        ) {\r\n            nodes {\r\n                html\r\n                frontmatter {\r\n                    title\r\n\t\t\t\t\tkeyNumber\r\n                }\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;"],"sourceRoot":""}